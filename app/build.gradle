apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion Versions.androidCompileSdk
    defaultConfig {
        applicationId "com.tebet.mojual"
        minSdkVersion Versions.androidMinSdk
        targetSdkVersion Versions.androidTargetSdk
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        // export the room schema, so we can use it for testing
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }

    signingConfigs {
        debug {
            storeFile file("../keystore/debug.keystore")
            storePassword "androidebug"
            keyAlias "mojual_debug"
            keyPassword "androidebug"
        }
        release {
            storeFile file("../keystore/release.keystore")
            storePassword "Tebet001InVi!"
            keyAlias "mojual_release"
            keyPassword "Tebet001InVi!"
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    flavorDimensions "dev"
    productFlavors {
        dev {
            dimension "dev"
            buildConfigField "String", "ENV_NAME", String.format("\"%s\"", "dev")
        }
        local {
            dimension "dev"
            buildConfigField "String", "ENV_NAME", String.format("\"%s\"", "local")
        }
        production {
            dimension "dev"
            buildConfigField "String", "ENV_NAME", String.format("\"%s\"", "production")
        }
    }
    lintOptions {
        checkReleaseBuilds true
        abortOnError true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    dataBinding {
        enabled = true
    }
}

kapt {
    javacOptions {
        // Increase the max count of errors from annotation processors.
        // Default is 100.
        option("-Xmaxerrs", 500)
    }
}

dependencies {
    // App dependencies
    implementation AppDependencies.KTXtAndroidX
    implementation AppDependencies.MultipleDexAndroidX
    implementation AppDependencies.appcompatAndroidX
    implementation AppDependencies.constrainLayoutAndroidX

    implementation AppDependencies.googlePlayServiceLocation
    implementation AppDependencies.googlePlayServiceMap
    implementation AppDependencies.googleFireBaseCore
    implementation AppDependencies.googleFireBaseMessaging


    implementation AppDependencies.sdp
    implementation AppDependencies.ssp
    implementation AppDependencies.gander

    implementation 'org.jsoup:jsoup:1.11.1'
    implementation 'pub.devrel:easypermissions:3.0.0'
    implementation 'com.github.Ilhasoft:data-binding-validator:2.0.0'
    implementation 'de.hdodenhof:circleimageview:3.0.0'
    implementation 'me.tatarka.bindingcollectionadapter2:bindingcollectionadapter:3.1.0'
    implementation 'me.tatarka.bindingcollectionadapter2:bindingcollectionadapter-recyclerview:3.1.0'
    implementation 'com.tapadoo.android:alerter:4.0.2'

    implementation AppDependencies.calligraphy

    implementation AppDependencies.androidSupportAnnotations

    implementation AppDependencies.dagger
    implementation AppDependencies.daggerSupport
    implementation AppDependencies.daggerAndroid

    implementation AppDependencies.glide
    implementation AppDependencies.glideAnnotation
    implementation AppDependencies.glideExtension

    implementation AppDependencies.gson
    implementation AppDependencies.javaxAnnotation
    implementation AppDependencies.kotlin
    implementation AppDependencies.okHttp
    implementation AppDependencies.okHttpLogger
    implementation AppDependencies.retrofit
    implementation AppDependencies.retrofitAdapter
    implementation AppDependencies.retrofitConverter
    implementation AppDependencies.roomRuntime
    implementation AppDependencies.roomRxJava
    implementation AppDependencies.rxAndroid
    implementation AppDependencies.rxJava
    implementation AppDependencies.rxKotlin
    implementation AppDependencies.stetho
    implementation AppDependencies.timber
    implementation AppDependencies.lifecycle

    debugImplementation AppDependencies.leakCanaryDebug
    releaseImplementation AppDependencies.leakCanaryRelease

    kapt AppDependencies.roomCompiler
    kapt AppDependencies.glideCompiler
    kapt AppDependencies.daggerCompiler
    kapt AppDependencies.daggerProcessor
    kapt AppDependencies.lifecycleCompiler


    compileOnly AppDependencies.glassfishAnnotation

    // Instrumentation test dependencies
    androidTestImplementation TestDependencies.dexopener
    androidTestImplementation TestDependencies.junit
    androidTestImplementation TestDependencies.mockitoKotlin
    androidTestImplementation TestDependencies.dexmakerMockito
    androidTestImplementation(TestDependencies.espressoCore) {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestImplementation(TestDependencies.androidRunner) {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestImplementation(TestDependencies.androidRules) {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestImplementation(TestDependencies.espressoIntents) {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestImplementation(TestDependencies.espressoContrib) {
        exclude module: 'appcompat'
        exclude module: 'appcompat-v7'
        exclude module: 'support-v4'
        exclude module: 'support-v13'
        exclude module: 'support-annotations'
        exclude module: 'recyclerview-v7'
        exclude module: 'design'
    }
    androidTestImplementation 'androidx.test:runner:1.2.0'

    kaptAndroidTest AppDependencies.daggerCompiler

    // Unit test dependencies
    testImplementation TestDependencies.junit
    testImplementation TestDependencies.kotlinJUnit
    testImplementation TestDependencies.mockitoKotlin
    testImplementation TestDependencies.assertj
    testImplementation TestDependencies.robolectric
    testImplementation TestDependencies.roomTesting

    kaptTest AppDependencies.daggerCompiler


    implementation project(':common')
    implementation project(':auth')
}

apply plugin: 'com.google.gms.google-services'