image: openjdk:8-jdk

variables:
  ANDROID_COMPILE_SDK: "28"
  ANDROID_BUILD_TOOLS: "28.0.2"
  ANDROID_SDK_TOOLS:   "4333796"

stages:
  - build
  - deploy

assembleDebug:
  stage: build
  script:
    - apt-get --quiet update --yes
    - apt-get --quiet install --yes wget tar unzip lib32stdc++6 lib32z1
    - wget --quiet --output-document=android-sdk.zip https://dl.google.com/android/repository/sdk-tools-linux-${ANDROID_SDK_TOOLS}.zip
    - unzip -d android-sdk-linux android-sdk.zip
    - echo y | android-sdk-linux/tools/bin/sdkmanager "platforms;android-${ANDROID_COMPILE_SDK}" >/dev/null
    - echo y | android-sdk-linux/tools/bin/sdkmanager "platform-tools" >/dev/null
    - echo y | android-sdk-linux/tools/bin/sdkmanager "build-tools;${ANDROID_BUILD_TOOLS}" >/dev/null
    - export ANDROID_HOME=$PWD/android-sdk-linux
    - export PATH=$PATH:$PWD/android-sdk-linux/platform-tools/
    - chmod +x ./gradlew
    - set +o pipefail
    - yes | android-sdk-linux/tools/bin/sdkmanager --licenses
    - set -o pipefail
    - ./gradlew assembleDebug
  artifacts:
    paths:
    - app/build/outputs/

deploy:
  image: alpine:latest
  stage: deploy
  script:
    - apt update
    - apt install openssh-client
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan -H dev.api.mo-jual.com >> ~/.ssh/known_hosts
    - chmod 600 tebet-devops
    - ssh -i tebet-devops docker@dev.api.mo-jual.com "rm -rf cd /var/www/tebet/android/dev/*"
    - scp -i tebet-devops /builds/investidea.tech/tebet/tebet-android/app/build/outputs/apk/dev/debug/app-dev-debug.apk docker@dev.api.mo-jual.com:/var/www/tebet/android/dev
